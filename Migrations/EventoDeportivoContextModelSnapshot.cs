// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalPro2.Migrations
{
    [DbContext(typeof(EventoDeportivoContext))]
    partial class EventoDeportivoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Equipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaFundacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Equipos");
                });

            modelBuilder.Entity("EquipoEvento", b =>
                {
                    b.Property<int>("EquiposParticipantesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EventosParticipadosId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EquiposParticipantesId", "EventosParticipadosId");

                    b.HasIndex("EventosParticipadosId");

                    b.ToTable("EquipoEvento");
                });

            modelBuilder.Entity("Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Deporte")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("TEXT");

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sede")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("Jugador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EquipoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("TEXT");

                    b.Property<string>("FotoUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NumeroCamiseta")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Posicion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EquipoId");

                    b.ToTable("Jugadores");
                });

            modelBuilder.Entity("Resultado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EquipoGanadorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EquipoPerderorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EventoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaResultado")
                        .HasColumnType("TEXT");

                    b.Property<int>("PuntuacionEquipoGanador")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PuntuacionEquipoPerdedor")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EquipoGanadorId");

                    b.HasIndex("EquipoPerderorId");

                    b.HasIndex("EventoId");

                    b.ToTable("Resultados");
                });

            modelBuilder.Entity("EquipoEvento", b =>
                {
                    b.HasOne("Equipo", null)
                        .WithMany()
                        .HasForeignKey("EquiposParticipantesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Evento", null)
                        .WithMany()
                        .HasForeignKey("EventosParticipadosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jugador", b =>
                {
                    b.HasOne("Equipo", "Equipo")
                        .WithMany("Jugadores")
                        .HasForeignKey("EquipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipo");
                });

            modelBuilder.Entity("Resultado", b =>
                {
                    b.HasOne("Equipo", "EquipoGanador")
                        .WithMany()
                        .HasForeignKey("EquipoGanadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Equipo", "EquipoPerdedor")
                        .WithMany()
                        .HasForeignKey("EquipoPerderorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Evento", "Evento")
                        .WithMany("Resultados")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipoGanador");

                    b.Navigation("EquipoPerdedor");

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("Equipo", b =>
                {
                    b.Navigation("Jugadores");
                });

            modelBuilder.Entity("Evento", b =>
                {
                    b.Navigation("Resultados");
                });
#pragma warning restore 612, 618
        }
    }
}
